subject: Bare Receipt
path: /objects.html#glossary_bare_receipt
meaning: |
  A Bare Receipt is a string containing an XML object describing payment made for a particular item at a particular time.
  In general, values in a Bare Receipt will correspond to the respective fields in the Receipt Definition.

  The `time` field represents when the client has declaired the transaction to happen; the notary has no way of enforcing this.
  `signer` and `cost` represent which of the options described in the Receipt Definition this receipt is intended to match.
  
  The Bare Receipt must be parseable (and presumably will be parsed) as a `<barereceipt>` as [described in the schema](TODO),
  but it should be stored and transmitted a string, which should be used verbatim instead of rebuilding it from any derived data-structure.
  Otherwise it might result in different hash values for different parties.

  > #### UUID Details<a name="uuid-implementation-details"></a>
  > It's the Client's responsibility to generate a random version-4 UUID.
    Use of other UUID types may result in identifiers that are traceable back to the Client's computer, or may risk collisions.
    Uniqueness is only enforceable on the signer/domain/UUID _triplet_;
    the global uniqueness of UUID's can not be relied upon here because a malicious client could deliberately violate it.
    Enforcing uniqueness across domains may be possible by the Notary, but this would require the Host to whom a domain is
    registered to check with the Notary every time they receive a receipt in order to know if the receipt were valid.
example: |
  ```xml
  <barereceipt xmlns="https://402.TBD">
    <time>1557944008</time>
    <uuid>bf9c1367-9589-41ff-8f74-134877341cce</uuid>
    <domain>https://www.example.com/</domain>
    <item>/path/image.png</item>
    <signer>https://receipts.dmn.network/path</signer>
    <cost>
      <units>USD</units>
      <amount>0.05</amount>
    </cost>
  </barereceipt>
  ```



